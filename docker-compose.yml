services:
  web:
    build:
      context: .
      dockerfile: docker/uvicorn/Dockerfile
      target: production
    container_name: fastapi_web
    volumes:
      - .:/app  # development only
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "sleep 5 &&
             alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
    networks:
      - fastapi_network

  db:
    image: postgres:15-alpine
    container_name: fastapi_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - fastapi_network

  redis:
    image: redis:7-alpine
    container_name: fastapi_redis
    ports:
      - "6379:6379"
    env_file:
      - .env
    command: redis-server --requirepass "${REDIS_PASSWORD:-default_password}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-default_password}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - fastapi_network

networks:
  fastapi_network:
    driver: bridge
    name: fastapi_network
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    name: fastapi_postgres_data
